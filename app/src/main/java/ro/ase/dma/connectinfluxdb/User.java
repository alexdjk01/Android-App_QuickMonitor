package ro.ase.dma.connectinfluxdb;

import android.os.Parcel;
import android.os.Parcelable;

import androidx.annotation.NonNull;
import androidx.room.ColumnInfo;
import androidx.room.Entity;
import androidx.room.Ignore;
import androidx.room.Index;
import androidx.room.PrimaryKey;

import java.util.Objects;

// email should be unique for each user./ the id is unique bcs is autoGenerated
@Entity(tableName = "users", indices = {@Index(value = {"userEmail"}, unique = true)})        //create table users in order to save user credentials
public class User implements Parcelable {

    // mark each user attribute with the destination in the database and set the primary key
    @PrimaryKey(autoGenerate = true)
    @ColumnInfo(name="ID")
    long userId;
    @ColumnInfo(name="userEmail")
    String email ;
    @ColumnInfo(name="userURL")
    String URL;
    @ColumnInfo(name="userEngineSeries")
    String engineSeries;

    @Ignore
    public User()
    {

    }

    public User(long userId, String email, String URL, String engineSeries) {
        this.userId = userId;
        this.email = email;
        this.URL = URL;
        this.engineSeries = engineSeries;
    }

    @Ignore
    public User( String email, String URL, String engineSeries) {
        this.email = email;
        this.URL = URL;
        this.engineSeries = engineSeries;
    }

    protected User(Parcel in) {
        userId = in.readLong();
        email = in.readString();
        URL = in.readString();
        engineSeries = in.readString();
    }

    public static final Creator<User> CREATOR = new Creator<User>() {
        @Override
        public User createFromParcel(Parcel in) {
            return new User(in);
        }

        @Override
        public User[] newArray(int size) {
            return new User[size];
        }
    };

    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(@NonNull Parcel parcel, int i) {
        parcel.writeLong(userId);
        parcel.writeString(email);
        parcel.writeString(URL);
        parcel.writeString(engineSeries);
    }

    @Override
    public String toString() {
        return "User{" +
                "userId=" + userId +
                ", email='" + email + '\'' +
                ", URL='" + URL + '\'' +
                ", engineSeries='" + engineSeries + '\'' +
                '}';
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        User user = (User) o;
        return userId == user.userId && Objects.equals(email, user.email) && Objects.equals(URL, user.URL) && Objects.equals(engineSeries, user.engineSeries);
    }

    @Override
    public int hashCode() {
        return Objects.hash(userId, email, URL, engineSeries);
    }

    public long getUserId() {
        return userId;
    }

    public void setUserId(long userId) {
        this.userId = userId;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getURL() {
        return URL;
    }

    public void setURL(String password) {
        this.URL = password;
    }

    public String getEngineSeries() {
        return engineSeries;
    }

    public void setEngineSeries(String engineSeries) {
        this.engineSeries = engineSeries;
    }
}
